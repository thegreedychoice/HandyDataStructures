from __future__ import print_function

class Node:
    '''Element Node Class containing the pointers and the data'''
    def __init__(self, data):
        self.data = data
        self.prev = self.next = None


class DoublyLinkedList:
    '''Class contains the doubly list and its operations'''
    def __init__(self):
        self.head = None

    def insert(self, key):
        newNode = Node(key)

        if self.head == None:
            self.head = newNode

        else:
            newNode.next = self.head
            self.head.prev = newNode
            self.head = newNode


    def printList(self):
            if self.head == None:
                print("None")
                return

            temp = self.head

            print("None", end=' <--> ')
            while temp != None:
                print(temp.data, end=' <--> ')
                temp = temp.next
            print("None")

    def search(self, key):
            if self.head == None:
                print("List Empty!")
                return

            else:
                isPresent = False
                temp = self.head
                while temp != None:
                    if temp.data == key:
                        isPresent = True
                    temp = temp.next

            if isPresent:
                print ("Key Found!")
            else:
                print ("Key Not Found!")


    def delete(self, key):
        if self.head == None:
            print ("List Empty!")
            return
        else:
            curr = self.head
            isPresent = False
            if curr.data == key:
                if curr.next != None:
                    curr.next.prev = None
                self.head = curr.next
                isPresent = True
                temp = curr
            else:
                while curr.next != None:
                    if curr.data == key:
                        curr.prev.next = curr.next
                        curr.next.prev = curr.prev
                        isPresent = True
                        temp = curr

                    curr = curr.next

                if curr.next == None and curr.data == key:
                    curr.prev.next = curr.next
                    temp = curr
                    isPresent = True

        if isPresent:
            print ("Key Deleted!")
            del temp
        else:
            print ("Key Not Found!")


    def reverse(self):
        if self.head == None:
            print("List Empty!")
            return
        else:
            curr = self.head
            prev = None
            next = None
            while curr != None:
                next = curr.next
                curr.next = prev
                if prev != None:
                    prev.prev = curr
                prev = curr
                curr = next

            prev.prev = None
            self.head = prev



if __name__ == "__main__":
    list = DoublyLinkedList()

    while True:
        operation = raw_input("Doubly Linked List Operations :\n1.Insert\n2.Search\n3.Delete\n4.Reverse\n5.Print List\n")
        if operation == "1":
            newItem = raw_input("Enter the value to be inserted!\n")
            list.insert(newItem)
        elif operation == "2":
            newItem = raw_input("Enter the value to be Searched!\n")
            list.search(newItem)
        elif operation == "3":
            newItem = raw_input("Enter the value to be Deleted!\n")
            list.delete(newItem)
        elif operation == "4":
            list.reverse()

        elif operation == "5":
            list.printList()
        else:
            quit()



